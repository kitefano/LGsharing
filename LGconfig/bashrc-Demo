alias c='clear'
alias lt='ls -ltr'
alias e='explorer'
alias code='code'
alias dtest='dotnet test --logger "console;verbosity=detailed"'
alias dtestf='function _dtestf(){ dotnet test --logger "console;verbosity=detailed" --filter "FullyQualifiedName~$1"; }; _dtestf'
alias vs='devenv.exe'
alias vs.='devenv.exe *.sln'
alias vsadmin='powershell.exe Start-Process devenv.exe -Verb RunAs'
alias vsadmin.='powershell.exe Start-Process devenv.exe *.sln -Verb RunAs'
# 递归 dotnet build
db() {
    # 找出所有 .sln 或 .csproj 文件并逐个 build
    find . -type f \( -name "*.sln" -o -name "*.csproj" \) | while read f; do
        echo "=== Building $f ==="
        dotnet build "$f"
    done
}
# 递归 dotnet clear
dc() {
    find . -type f \( -name "*.sln" -o -name "*.csproj" \) | while read f; do
        echo "=== Cleaning $f ==="
        dotnet clean "$f"
    done
}
# 递归 dotnet test
dt() {
    # 优先测试 .sln，如果没有再跑 .csproj
    files=$(find . -type f -name "*.sln")
    if [ -z "$files" ]; then
        files=$(find . -type f -name "*.csproj")
    fi

    echo "$files" | while IFS= read -r f; do
        echo "=== Testing $f ==="
        dotnet test "$f" --logger "console;verbosity=detailed"
    done
}

dtn() {
    files=$(find . -type f -name "*.sln")
    if [ -z "$files" ]; then
        files=$(find . -type f -name "*.csproj")
    fi

    echo "$files" | while IFS= read -r f; do
        echo "=== Testing $f ==="
        dotnet test "$f" --logger "console;verbosity=detailed" --no-build
    done
}

